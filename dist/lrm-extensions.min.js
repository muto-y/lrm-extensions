/*! lrm-extensions - version 1.0.0 - 2016-12-26 - Copyright 2016 Christian Guyette - Contact: http//www.ouaie.be/ - This  program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3 of the License, or any later version.*/

!function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){function d(a,b,c){function d(a){return a>=200&&a<300||304===a}function e(){void 0===h.status||d(h.status)?b.call(h,null,h):b.call(h,h,null)}var f=!1;if("undefined"==typeof window.XMLHttpRequest)return b(Error("Browser not supported"));if("undefined"==typeof c){var g=a.match(/^\s*https?:\/\/[^\/]*/);c=g&&g[0]!==location.protocol+"//"+location.hostname+(location.port?":"+location.port:"")}var h=new window.XMLHttpRequest;if(c&&!("withCredentials"in h)){h=new window.XDomainRequest;var i=b;b=function(){if(f)i.apply(this,arguments);else{var a=this,b=arguments;setTimeout(function(){i.apply(a,b)},0)}}}return"onload"in h?h.onload=e:h.onreadystatechange=function(){4===h.readyState&&e()},h.onerror=function(a){b.call(this,a||!0,null),b=function(){}},h.onprogress=function(){},h.ontimeout=function(a){b.call(this,a,null),b=function(){}},h.onabort=function(a){b.call(this,a,null),b=function(){}},h.open("GET",a,!0),h.send(null),f=!0,h}"undefined"!=typeof b&&(b.exports=d)},{}],2:[function(a,b,c){b.exports=function(b,c,d){var e=a("./instructions").get(c);if(Object!==e.constructor)throw"instructions must be object";if(!e[b])throw"invalid version "+b;return{capitalizeFirstLetter:function(a){return a.charAt(0).toUpperCase()+a.slice(1)},ordinalize:function(a){return e[b].constants.ordinalize[a.toString()]||""},directionFromDegree:function(a){if(a||0===a){if(a>=0&&a<=20)return e[b].constants.direction.north;if(a>20&&a<70)return e[b].constants.direction.northeast;if(a>=70&&a<110)return e[b].constants.direction.east;if(a>=110&&a<=160)return e[b].constants.direction.southeast;if(a>160&&a<=200)return e[b].constants.direction.south;if(a>200&&a<250)return e[b].constants.direction.southwest;if(a>=250&&a<=290)return e[b].constants.direction.west;if(a>290&&a<340)return e[b].constants.direction.northwest;if(a>=340&&a<=360)return e[b].constants.direction.north;throw new Error("Degree "+a+" invalid")}return""},laneConfig:function(a){if(!a.intersections||!a.intersections[0].lanes)throw new Error("No lanes object");var b=[],c=null;return a.intersections[0].lanes.forEach(function(a){null!==c&&c===a.valid||(a.valid?b.push("o"):b.push("x"),c=a.valid)}),b.join("")},compile:function(a){if(!a.maneuver)throw new Error("No step maneuver provided");var c=a.maneuver.type,f=a.maneuver.modifier,g=a.mode;if(!c)throw new Error("Missing step maneuver type");if("depart"!==c&&"arrive"!==c&&!f)throw new Error("Missing step maneuver modifier");e[b][c]||(console.log("Encountered unknown instruction type: "+c),c="turn");var h;h=e[b].modes[g]?e[b].modes[g]:e[b][c][f]?e[b][c][f]:e[b][c].default;var i;switch(c){case"use lane":i=e[b].constants.lanes[this.laneConfig(a)],i||(h=e[b]["use lane"].no_lanes);break;case"rotary":case"roundabout":h=a.rotary_name&&a.maneuver.exit&&h.name_exit?h.name_exit:a.rotary_name&&h.name?h.name:a.maneuver.exit&&h.exit?h.exit:h.default}var j,k=a.name||"",l=(a.ref||"").split(";")[0];k===a.ref&&(k=""),k=k.replace(" ("+a.ref+")",""),j=k&&l&&k!==l?k+" ("+l+")":!k&&l?l:k;var m;m=a.destinations&&h.destination?h.destination:j&&h.name?h.name:h.default;var n=((d||{}).hooks||{}).tokenizedInstruction;n&&(m=n(m));var o="";return m=m.replace("{way_name}",j).replace("{destination}",(a.destinations||"").split(",")[0]).replace("{exit_number}",this.ordinalize(a.maneuver.exit||1)).replace("{rotary_name}",a.rotary_name).replace("{lane_instruction}",i).replace("{modifier}",e[b].constants.modifier[f]).replace("{direction}",this.directionFromDegree(a.maneuver.bearing_after)).replace("{nth}",o).replace(/ {2}/g," "),e.meta.capitalizeFirstLetter&&(m=this.capitalizeFirstLetter(m)),m}}}},{"./instructions":3}],3:[function(a,b,c){var d=a("./instructions/de.json"),e=a("./instructions/en.json"),f=a("./instructions/fr.json"),g=a("./instructions/nl.json"),h=a("./instructions/zh-Hans.json");b.exports={get:function(a){switch(a){case"en":return e;case"de":return d;case"fr":return f;case"nl":return g;case"zh":case"zh-Hans":return h;default:throw"invalid language "+a}}}},{"./instructions/de.json":4,"./instructions/en.json":5,"./instructions/fr.json":6,"./instructions/nl.json":7,"./instructions/zh-Hans.json":8}],4:[function(a,b,c){b.exports={meta:{capitalizeFirstLetter:!0},v5:{constants:{ordinalize:{1:"erste",2:"zweite",3:"dritte",4:"vierte",5:"fünfte",6:"sechste",7:"siebente",8:"achte",9:"neunte",10:"zehnte"},direction:{north:"Norden",northeast:"Nordosten",east:"Osten",southeast:"Südosten",south:"Süden",southwest:"Südwesten",west:"Westen",northwest:"Nordwesten"},modifier:{left:"links",right:"rechts","sharp left":"scharf links","sharp right":"scharf rechts","slight left":"leicht links","slight right":"leicht rechts",straight:"geradeaus",uturn:"180°-Wendung"},lanes:{xo:"Rechts halten",ox:"Links halten",xox:"Mittlere Spur nutzen",oxo:"Rechts oder links halten"}},modes:{ferry:{default:"Fähre nehmen",name:"Fähre nehmen {way_name}",destination:"Fähre nehmen Richtung {destination}"}},arrive:{default:{default:"Sie haben Ihr {nth} Ziel erreicht"},left:{default:"Sie haben Ihr {nth} Ziel erreicht, es befindet sich links von Ihnen"},right:{default:"Sie haben Ihr {nth} Ziel erreicht, es befindet sich rechts von Ihnen"},"sharp left":{default:"Sie haben Ihr {nth} Ziel erreicht, es befindet sich links von Ihnen"},"sharp right":{default:"Sie haben Ihr {nth} Ziel erreicht, es befindet sich rechts von Ihnen"},"slight right":{default:"Sie haben Ihr {nth} Ziel erreicht, es befindet sich rechts von Ihnen"},"slight left":{default:"Sie haben Ihr {nth} Ziel erreicht, es befindet sich links von Ihnen"},straight:{default:"Sie haben Ihr {nth} Ziel erreicht, es befindet sich direkt vor Ihnen"}},continue:{default:{default:"{modifier} weiterfahren",name:"{modifier} weiterfahren auf {way_name}",destination:"{modifier} weiterfahren Richtung {destination}"},"slight left":{default:"Leicht links weiter",name:"Leicht links weiter auf {way_name}",destination:"Leicht links weiter Richtung {destination}"},"slight right":{default:"Leicht rechts weiter",name:"Leicht rechts weiter auf {way_name}",destination:"Leicht rechts weiter Richtung {destination}"},uturn:{default:"180°-Wendung",name:"180°-Wendung auf {way_name}",destination:"180°-Wendung Richtung {destination}"}},depart:{default:{default:"Fahren Sie Richtung {direction}",name:"Fahren Sie Richtung {direction} auf {way_name}"}},"end of road":{default:{default:"{modifier} abbiegen",name:"{modifier} abbiegen auf {way_name}",destination:"{modifier} abbiegen Richtung {destination}"},straight:{default:"Geradeaus weiterfahren",name:"Geradeaus weiterfahren auf {way_name}",destination:"Geradeaus weiterfahren Richtung {destination}"},uturn:{default:"180°-Wendung am Ende der Straße",name:"180°-Wendung auf {way_name} am Ende der Straße",destination:"180°-Wendung Richtung {destination} am Ende der Straße"}},fork:{default:{default:"{modifier} halten an der Gabelung",name:"{modifier} halten an der Gabelung auf {way_name}",destination:"{modifier}  halten an der Gabelung Richtung {destination}"},"slight left":{default:"Links halten an der Gabelung",name:"Links halten an der Gabelung auf {way_name}",destination:"Links halten an der Gabelung Richtung {destination}"},"slight right":{default:"Rechts halten an der Gabelung",name:"Rechts halten an der Gabelung auf {way_name}",destination:"Rechts halten an der Gabelung Richtung {destination}"},"sharp left":{default:"Scharf links abbiegen an der Gabelung",name:"Scharf links abbiegen an der Gabelung auf {way_name}",destination:"Scharf links abbiegen an der Gabelung Richtung {destination}"},"sharp right":{default:"Scharf rechts abbiegen an der Gabelung",name:"Scharf rechts abbiegen an der Gabelung auf {way_name}",destination:"Scharf rechts abbiegen an der Gabelung Richtung {destination}"},uturn:{default:"180°-Wendung",name:"180°-Wendung auf {way_name}",destination:"180°-Wendung Richtung {destination}"}},merge:{default:{default:"{modifier} auffahren",name:"{modifier} auffahren auf {way_name}",destination:"{modifier} auffahren Richtung {destination}"},"slight left":{default:"Leicht links auffahren",name:"Leicht links auffahren auf {way_name}",destination:"Leicht links auffahren Richtung {destination}"},"slight right":{default:"Leicht rechts auffahren",name:"Leicht rechts auffahren auf {way_name}",destination:"Leicht rechts auffahren Richtung {destination}"},"sharp left":{default:"Scharf links auffahren",name:"Scharf links auffahren auf {way_name}",destination:"Scharf links auffahren Richtung {destination}"},"sharp right":{default:"Scharf rechts auffahren",name:"Scharf rechts auffahren auf {way_name}",destination:"Scharf rechts auffahren Richtung {destination}"},uturn:{default:"180°-Wendung",name:"180°-Wendung auf {way_name}",destination:"180°-Wendung Richtung {destination}"}},"new name":{default:{default:"{modifier} weiterfahren",name:"{modifier} weiterfahren auf {way_name}",destination:"{modifier} weiterfahren Richtung {destination}"},"sharp left":{default:"Scharf links",name:"Scharf links auf {way_name}",destination:"Scharf links Richtung {destination}"},"sharp right":{default:"Scharf rechts",name:"Scharf rechts auf {way_name}",destination:"Scharf rechts Richtung {destination}"},"slight left":{default:"Leicht links weiter",name:"Leicht links weiter auf {way_name}",destination:"Leicht links weiter Richtung {destination}"},"slight right":{default:"Leicht rechts weiter",name:"Leicht rechts weiter auf {way_name}",destination:"Leicht rechts weiter Richtung {destination}"},uturn:{default:"180°-Wendung",name:"180°-Wendung auf {way_name}",destination:"180°-Wendung Richtung {destination}"}},notification:{default:{default:"{modifier} weiterfahren",name:"{modifier} weiterfahren auf {way_name}",destination:"{modifier} weiterfahren Richtung {destination}"},uturn:{default:"180°-Wendung",name:"180°-Wendung auf {way_name}",destination:"180°-Wendung Richtung {destination}"}},"off ramp":{default:{default:"Rampe nehmen",name:"Rampe nehmen auf {way_name}",destination:"Rampe nehmen Richtung {destination}"},left:{default:"Rampe auf der linken Seite nehmen",name:"Rampe auf der linken Seite nehmen auf {way_name}",destination:"Rampe auf der linken Seite nehmen Richtung {destination}"},right:{default:"Rampe auf der rechten Seite nehmen",name:"Rampe auf der rechten Seite nehmen auf {way_name}",destination:"Rampe auf der rechten Seite nehmen Richtung {destination}"},"sharp left":{default:"Rampe auf der linken Seite nehmen",name:"Rampe auf der linken Seite nehmen auf {way_name}",destination:"Rampe auf der linken Seite nehmen Richtung {destination}"},"sharp right":{default:"Rampe auf der rechten Seite nehmen",name:"Rampe auf der rechten Seite nehmen auf {way_name}",destination:"Rampe auf der rechten Seite nehmen Richtung {destination}"},"slight left":{default:"Rampe auf der linken Seite nehmen",name:"Rampe auf der linken Seite nehmen auf {way_name}",destination:"Rampe auf der linken Seite nehmen Richtung {destination}"},"slight right":{default:"Rampe auf der rechten Seite nehmen",name:"Rampe auf der rechten Seite nehmen auf {way_name}",destination:"Rampe auf der rechten Seite nehmen Richtung {destination}"}},"on ramp":{default:{default:"Rampe nehmen",name:"Rampe nehmen auf {way_name}",destination:"Rampe nehmen Richtung {destination}"},left:{default:"Rampe auf der linken Seite nehmen",name:"Rampe auf der linken Seite nehmen auf {way_name}",destination:"Rampe auf der linken Seite nehmen Richtung {destination}"},right:{default:"Rampe auf der rechten Seite nehmen",name:"Rampe auf der rechten Seite nehmen auf {way_name}",destination:"Rampe auf der rechten Seite nehmen Richtung {destination}"},"sharp left":{default:"Rampe auf der linken Seite nehmen",name:"Rampe auf der linken Seite nehmen auf {way_name}",destination:"Rampe auf der linken Seite nehmen Richtung {destination}"},"sharp right":{default:"Rampe auf der rechten Seite nehmen",name:"Rampe auf der rechten Seite nehmen auf {way_name}",destination:"Rampe auf der rechten Seite nehmen Richtung {destination}"},"slight left":{default:"Rampe auf der linken Seite nehmen",name:"Rampe auf der linken Seite nehmen auf {way_name}",destination:"Rampe auf der linken Seite nehmen Richtung {destination}"},"slight right":{default:"Rampe auf der rechten Seite nehmen",name:"Rampe auf der rechten Seite nehmen auf {way_name}",destination:"Rampe auf der rechten Seite nehmen Richtung {destination}"}},rotary:{default:{default:{default:"In den Kreisverkehr fahren",name:"In den Kreisverkehr fahren und auf {way_name} verlassen",destination:"In den Kreisverkehr fahren und Richtung {destination} verlassen"},name:{default:"In {rotary_name} fahren",name:"In {rotary_name} fahren und auf {way_name} verlassen",destination:"In {rotary_name} fahren und Richtung {destination} verlassen"},exit:{default:"In den Kreisverkehr fahren und {exit_number} Ausfahrt nehmen",name:"In den Kreisverkehr fahren und {exit_number} Ausfahrt nehmen auf {way_name}",destination:"In den Kreisverkehr fahren und {exit_number} Ausfahrt nehmen Richtung {destination}"},name_exit:{default:"In den Kreisverkehr fahren und {exit_number} Ausfahrt nehmen",name:"In den Kreisverkehr fahren und {exit_number} Ausfahrt nehmen auf {way_name}",destination:"In den Kreisverkehr fahren und {exit_number} Ausfahrt nehmen Richtung {destination}"}}},roundabout:{default:{exit:{default:"In den Kreisverkehr fahren und {exit_number} Ausfahrt nehmen",name:"In den Kreisverkehr fahren und {exit_number} Ausfahrt nehmen auf {way_name}",destination:"In den Kreisverkehr fahren und {exit_number} Ausfahrt nehmen Richtung {destination}"},default:{default:"In den Kreisverkehr fahren",name:"In den Kreisverkehr fahren und auf {way_name} verlassen",destination:"In den Kreisverkehr fahren und Richtung {destination} verlassen"}}},"roundabout turn":{default:{default:"Am Kreisverkehr {modifier}",name:"Am Kreisverkehr {modifier} auf {way_name}",destination:"Am Kreisverkehr {modifier} Richtung {destination}"},left:{default:"Am Kreisverkehr links",name:"Am Kreisverkehr links auf {way_name}",destination:"Am Kreisverkehr links Richtung {destination}"},right:{default:"Am Kreisverkehr rechts",name:"Am Kreisverkehr rechts auf {way_name}",destination:"Am Kreisverkehr rechts Richtung {destination}"},straight:{default:"Am Kreisverkehr geradeaus weiterfahren",name:"Am Kreisverkehr geradeaus weiterfahren auf {way_name}",destination:"Am Kreisverkehr geradeaus weiterfahren Richtung {destination}"}},turn:{default:{default:"{modifier} abbiegen",name:"{modifier} abbiegen auf {way_name}",destination:"{modifier} abbiegen Richtung {destination}"},left:{default:"Links abbiegen",name:"Links abbiegen auf {way_name}",destination:"Links abbiegen Richtung {destination}"},right:{default:"Rechts abbiegen",name:"Rechts abbiegen auf {way_name}",destination:"Rechts abbiegen Richtung {destination}"},straight:{default:"Geradeaus weiterfahren",name:"Geradeaus weiterfahren auf {way_name}",destination:"Geradeaus weiterfahren Richtung {destination}"}},"use lane":{no_lanes:{default:"Geradeaus weiterfahren"},default:{default:"{lane_instruction}"}}}}},{}],5:[function(a,b,c){b.exports={meta:{capitalizeFirstLetter:!0},v5:{constants:{ordinalize:{1:"1st",2:"2nd",3:"3rd",4:"4th",5:"5th",6:"6th",7:"7th",8:"8th",9:"9th",10:"10th"},direction:{north:"north",northeast:"northeast",east:"east",southeast:"southeast",south:"south",southwest:"southwest",west:"west",northwest:"northwest"},modifier:{left:"left",right:"right","sharp left":"sharp left","sharp right":"sharp right","slight left":"slight left","slight right":"slight right",straight:"straight",uturn:"U-turn"},lanes:{xo:"Keep right",ox:"Keep left",xox:"Keep in the middle",oxo:"Keep left or right"}},modes:{ferry:{default:"Take the ferry",name:"Take the ferry {way_name}",destination:"Take the ferry towards {destination}"}},arrive:{default:{default:"You have arrived at your {nth} destination"},left:{default:"You have arrived at your {nth} destination, on the left"},right:{default:"You have arrived at your {nth} destination, on the right"},"sharp left":{default:"You have arrived at your {nth} destination, on the left"},"sharp right":{default:"You have arrived at your {nth} destination, on the right"},"slight right":{default:"You have arrived at your {nth} destination, on the right"},"slight left":{default:"You have arrived at your {nth} destination, on the left"},straight:{default:"You have arrived at your {nth} destination, straight ahead"}},continue:{default:{default:"Continue {modifier}",name:"Continue {modifier} onto {way_name}",destination:"Continue {modifier} towards {destination}"},"slight left":{default:"Continue slightly left",name:"Continue slightly left onto {way_name}",destination:"Continue slightly left towards {destination}"},"slight right":{default:"Continue slightly right",name:"Continue slightly right onto {way_name}",destination:"Continue slightly right towards {destination}"},uturn:{default:"Make a U-turn",name:"Make a U-turn onto {way_name}",destination:"Make a U-turn towards {destination}"}},depart:{default:{default:"Head {direction}",name:"Head {direction} on {way_name}"}},"end of road":{default:{default:"Turn {modifier}",name:"Turn {modifier} onto {way_name}",destination:"Turn {modifier} towards {destination}"},straight:{default:"Continue straight",name:"Continue straight onto {way_name}",destination:"Continue straight towards {destination}"},uturn:{default:"Make a U-turn at the end of the road",name:"Make a U-turn onto {way_name} at the end of the road",destination:"Make a U-turn towards {destination} at the end of the road"}},fork:{default:{default:"Keep {modifier} at the fork",name:"Keep {modifier} at the fork onto {way_name}",destination:"Keep {modifier} at the fork towards {destination}"},"slight left":{default:"Keep left at the fork",name:"Keep left at the fork onto {way_name}",destination:"Keep left at the fork towards {destination}"},"slight right":{default:"Keep right at the fork",name:"Keep right at the fork onto {way_name}",destination:"Keep right at the fork towards {destination}"},"sharp left":{default:"Take a sharp left at the fork",name:"Take a sharp left at the fork onto {way_name}",destination:"Take a sharp left at the fork towards {destination}"},"sharp right":{default:"Take a sharp right at the fork",name:"Take a sharp right at the fork onto {way_name}",destination:"Take a sharp right at the fork towards {destination}"},uturn:{default:"Make a U-turn",name:"Make a U-turn onto {way_name}",destination:"Make a U-turn towards {destination}"}},merge:{default:{default:"Merge {modifier}",name:"Merge {modifier} onto {way_name}",destination:"Merge {modifier} towards {destination}"},"slight left":{default:"Merge left",name:"Merge left onto {way_name}",destination:"Merge left towards {destination}"},"slight right":{default:"Merge right",name:"Merge right onto {way_name}",destination:"Merge right towards {destination}"},"sharp left":{default:"Merge left",name:"Merge left onto {way_name}",destination:"Merge left towards {destination}"},"sharp right":{default:"Merge right",name:"Merge right onto {way_name}",destination:"Merge right towards {destination}"},uturn:{default:"Make a U-turn",name:"Make a U-turn onto {way_name}",destination:"Make a U-turn towards {destination}"}},"new name":{default:{default:"Continue {modifier}",name:"Continue {modifier} onto {way_name}",destination:"Continue {modifier} towards {destination}"},"sharp left":{default:"Take a sharp left",name:"Take a sharp left onto {way_name}",destination:"Take a sharp left towards {destination}"},"sharp right":{default:"Take a sharp right",name:"Take a sharp right onto {way_name}",destination:"Take a sharp right towards {destination}"},"slight left":{default:"Continue slightly left",name:"Continue slightly left onto {way_name}",destination:"Continue slightly left towards {destination}"},"slight right":{default:"Continue slightly right",name:"Continue slightly right onto {way_name}",destination:"Continue slightly right towards {destination}"},uturn:{default:"Make a U-turn",name:"Make a U-turn onto {way_name}",destination:"Make a U-turn towards {destination}"}},notification:{default:{default:"Continue {modifier}",name:"Continue {modifier} onto {way_name}",destination:"Continue {modifier} towards {destination}"},uturn:{default:"Make a U-turn",name:"Make a U-turn onto {way_name}",destination:"Make a U-turn towards {destination}"}},"off ramp":{default:{default:"Take the ramp",name:"Take the ramp onto {way_name}",destination:"Take the ramp towards {destination}"},left:{default:"Take the ramp on the left",name:"Take the ramp on the left onto {way_name}",destination:"Take the ramp on the left towards {destination}"},right:{default:"Take the ramp on the right",name:"Take the ramp on the right onto {way_name}",destination:"Take the ramp on the right towards {destination}"},"sharp left":{default:"Take the ramp on the left",name:"Take the ramp on the left onto {way_name}",destination:"Take the ramp on the left towards {destination}"},"sharp right":{default:"Take the ramp on the right",name:"Take the ramp on the right onto {way_name}",destination:"Take the ramp on the right towards {destination}"},"slight left":{default:"Take the ramp on the left",name:"Take the ramp on the left onto {way_name}",destination:"Take the ramp on the left towards {destination}"},"slight right":{default:"Take the ramp on the right",name:"Take the ramp on the right onto {way_name}",destination:"Take the ramp on the right towards {destination}"}},"on ramp":{default:{default:"Take the ramp",name:"Take the ramp onto {way_name}",destination:"Take the ramp towards {destination}"},left:{default:"Take the ramp on the left",name:"Take the ramp on the left onto {way_name}",destination:"Take the ramp on the left towards {destination}"},right:{default:"Take the ramp on the right",name:"Take the ramp on the right onto {way_name}",destination:"Take the ramp on the right towards {destination}"},"sharp left":{default:"Take the ramp on the left",name:"Take the ramp on the left onto {way_name}",destination:"Take the ramp on the left towards {destination}"},"sharp right":{default:"Take the ramp on the right",name:"Take the ramp on the right onto {way_name}",destination:"Take the ramp on the right towards {destination}"},"slight left":{default:"Take the ramp on the left",name:"Take the ramp on the left onto {way_name}",destination:"Take the ramp on the left towards {destination}"},"slight right":{default:"Take the ramp on the right",name:"Take the ramp on the right onto {way_name}",destination:"Take the ramp on the right towards {destination}"}},rotary:{default:{default:{default:"Enter the rotary",name:"Enter the rotary and exit onto {way_name}",destination:"Enter the rotary and exit towards {destination}"},name:{default:"Enter {rotary_name}",name:"Enter {rotary_name} and exit onto {way_name}",destination:"Enter {rotary_name} and exit towards {destination}"},exit:{default:"Enter the rotary and take the {exit_number} exit",name:"Enter the rotary and take the {exit_number} exit onto {way_name}",destination:"Enter the rotary and take the {exit_number} exit towards {destination}"},name_exit:{default:"Enter {rotary_name} and take the {exit_number} exit",name:"Enter {rotary_name} and take the {exit_number} exit onto {way_name}",destination:"Enter {rotary_name} and take the {exit_number} exit towards {destination}"}}},roundabout:{default:{exit:{default:"Enter the roundabout and take the {exit_number} exit",name:"Enter the roundabout and take the {exit_number} exit onto {way_name}",destination:"Enter the roundabout and take the {exit_number} exit towards {destination}"},default:{default:"Enter the roundabout",name:"Enter the roundabout and exit onto {way_name}",destination:"Enter the roundabout and exit towards {destination}"}}},"roundabout turn":{default:{default:"At the roundabout make a {modifier}",name:"At the roundabout make a {modifier} onto {way_name}",destination:"At the roundabout make a {modifier} towards {destination}"},left:{default:"At the roundabout turn left",name:"At the roundabout turn left onto {way_name}",destination:"At the roundabout turn left towards {destination}"},right:{default:"At the roundabout turn right",name:"At the roundabout turn right onto {way_name}",destination:"At the roundabout turn right towards {destination}"},straight:{default:"At the roundabout continue straight",name:"At the roundabout continue straight onto {way_name}",destination:"At the roundabout continue straight towards {destination}"}},turn:{default:{default:"Make a {modifier}",name:"Make a {modifier} onto {way_name}",destination:"Make a {modifier} towards {destination}"},left:{default:"Turn left",name:"Turn left onto {way_name}",destination:"Turn left towards {destination}"},right:{default:"Turn right",name:"Turn right onto {way_name}",destination:"Turn right towards {destination}"},straight:{default:"Go straight",name:"Go straight onto {way_name}",destination:"Go straight towards {destination}"}},"use lane":{no_lanes:{default:"Continue straight"},default:{default:"{lane_instruction}"}}}}},{}],6:[function(a,b,c){b.exports={meta:{capitalizeFirstLetter:!0},v5:{constants:{ordinalize:{1:"première",2:"seconde",3:"troisième",4:"quatrième",5:"cinquième",6:"sixième",7:"setpième",8:"huitième",9:"neuvième",10:"dixième"},direction:{north:"le nord",northeast:"le nord-est",east:"l'est",southeast:"le sud-est",south:"le sud",southwest:"le sud-ouest",west:"l'ouest",northwest:"le nord-ouest"},modifier:{left:"à gauche",right:"à droite","sharp left":"franchement à gauche","sharp right":"franchement à droite","slight left":"légèrement à gauche","slight right":"légèrement à droite",straight:"tout droit",uturn:"demi-tour"},lanes:{xo:"Serrer à droite",ox:"Serrer à gauche",xox:"Rester au milieu",oxo:"Rester à gauche ou à droite"}},modes:{ferry:{default:"Prendre le ferry",name:"Prendre le ferry {way_name}",destination:"Prendre le ferry en direction de {destination}"}},arrive:{default:{default:"Vous êtes arrivés à votre {nth} destination"},left:{default:"Vous êtes arrivés à votre {nth} destination, sur la gauche"},right:{default:"Vous êtes arrivés à votre {nth} destination, sur la droite"},"sharp left":{default:"Vous êtes arrivés à votre {nth} destination, sur la gauche"},"sharp right":{default:"Vous êtes arrivés à votre {nth} destination, sur la droite"},"slight right":{default:"Vous êtes arrivés à votre {nth} destination, sur la droite"},"slight left":{default:"Vous êtes arrivés à votre {nth} destination, sur la gauche"},straight:{default:"Vous êtes arrivés à votre {nth} destination, droit devant"}},continue:{default:{default:"Continuer {modifier}",name:"Continuer {modifier} sur {way_name}",destination:"Continuer {modifier} en direction de {destination}"},"slight left":{default:"Continuer légèrement à gauche",name:"Continuer légèrement à gauche sur {way_name}",destination:"Continuer légèrement à gauche en direction de {destination}"},"slight right":{default:"Continuer légèrement à droite",name:"Continuer légèrement à droite sur {way_name}",destination:"Continuer légèrement à droite en direction de {destination}"},uturn:{default:"Faire demi-tour",name:"Faire demi-tour sur {way_name}",destination:"Faire demi-tour en direction de {destination}"}},depart:{default:{default:"Rouler vers {direction}",name:"Rouler vers {direction} sur {way_name}"}},"end of road":{default:{default:"Tourner {modifier}",name:"Tourner {modifier} sur {way_name}",destination:"Tourner {modifier} en direction de {destination}"},straight:{default:"Continuer tout droit",name:"Continuer tout droit sur {way_name}",destination:"Continuer tout droit en direction de {destination}"},uturn:{default:"Faire demi-tour à la fin de la route",name:"Faire demi-tour à la fin de la route {way_name}",destination:"Faire demi-tour à la fin de la route en direction de {destination}"}},fork:{default:{default:"Rester {modifier} à l'embranchement",name:"Rester {modifier} à l'embranchement sur {way_name}",destination:"Rester {modifier} à l'embranchement en direction de {destination}"},"slight left":{default:"Rester à gauche à l'embranchement",name:"Rester à gauche à l'embranchement sur {way_name}",destination:"Rester à gauche à l'embranchement en direction de {destination}"},"slight right":{default:"Rester à droite à l'embranchement",name:"Rester à droite à l'embranchement sur {way_name}",destination:"Rester à droite à l'embranchement en direction de {destination}"},"sharp left":{default:"Prendre à gauche à l'embranchement",name:"Prendre à gauche à l'embranchement sur {way_name}",destination:"Prendre à gauche à l'embranchement en direction de {destination}"},"sharp right":{default:"Prendre à droite à l'embranchement",name:"Prendre à droite à l'embranchement sur {way_name}",destination:"Prendre à droite à l'embranchement en direction de {destination}"},uturn:{default:"Faire demi-tour",name:"Faire demi-tour sur {way_name}",destination:"Faire demi-tour en direction de {destination}"}},merge:{default:{default:"Rejoindre {modifier}",name:"Rejoindre {modifier} sur {way_name}",destination:"Rejoindre {modifier} en direction de {destination}"},"slight left":{default:"Rejoindre légèrement par la gauche",name:"Rejoindre {way_name} légèrement par la gauche",destination:"Rejoindre légèrement par la gauche la route en direction de {destination}"},"slight right":{default:"Rejoindre légèrement par la droite",name:"Rejoindre {way_name} légèrement par la droite",destination:"Rejoindre légèrement par la droite la route en direction de {destination}"},"sharp left":{default:"Rejoindre par la gauche",name:"Rejoindre {way_name} par la gauche",destination:"Rejoindre par la gauche la route en direction de {destination}"},"sharp right":{default:"Rejoindre par la droite",name:"Rejoindre {way_name} par la droite",destination:"Rejoindre par la droite la route en direction de {destination}"},uturn:{default:"Fair demi-tour",name:"Fair demi-tour sur {way_name}",destination:"Fair demi-tour en direction de {destination}"}},"new name":{default:{default:"Continuer {modifier}",name:"Continuer {modifier} sur {way_name}",destination:"Continuer {modifier} en direction de {destination}"},"sharp left":{default:"Prendre à gauche",name:"Prendre à gauche sur {way_name}",destination:"Prendre à gauche en direction de {destination}"},"sharp right":{default:"Prendre à droite",name:"Prendre à droite sur {way_name}",destination:"Prendre à droite en direction de {destination}"},"slight left":{default:"Continuer légèrement à gauche",name:"Continuer légèrement à gauche sur {way_name}",destination:"Continuer légèrement à gauche en direction de {destination}"},"slight right":{default:"Continuer légèrement à droite",name:"Continuer légèrement à droite sur {way_name}",destination:"Continuer légèrement à droite en direction de {destination}"},uturn:{default:"Fair demi-tour",name:"Fair demi-tour sur {way_name}",destination:"Fair demi-tour en direction de {destination}"}},notification:{default:{default:"Continuer {modifier}",name:"Continuer {modifier} sur {way_name}",destination:"Continuer {modifier} en direction de {destination}"},uturn:{default:"Fair demi-tour",name:"Fair demi-tour sur {way_name}",destination:"Fair demi-tour en direction de {destination}"}},"off ramp":{default:{default:"Prendre la sortie",name:"Prendre la sortie sur {way_name}",destination:"Prendre la sortie en direction de {destination}"},left:{default:"Prendre la sortie à gauche",name:"Prendre la sortie à gauche sur {way_name}",destination:"Prendre la sortie à gauche en direction de {destination}"},right:{default:"Prendre la sortie à droite",name:"Prendre la sortie à droite sur {way_name}",destination:"Prendre la sortie à droite en direction de {destination}"
},"sharp left":{default:"Prendre la sortie à gauche",name:"Prendre la sortie à gauche sur {way_name}",destination:"Prendre la sortie à gauche en direction de {destination}"},"sharp right":{default:"Prendre la sortie à droite",name:"Prendre la sortie à droite sur {way_name}",destination:"Prendre la sortie à droite en direction de {destination}"},"slight left":{default:"Prendre la sortie à gauche",name:"Prendre la sortie à gauche sur {way_name}",destination:"Prendre la sortie à gauche en direction de {destination}"},"slight right":{default:"Prendre la sortie à droite",name:"Prendre la sortie à droite sur {way_name}",destination:"Prendre la sortie à droite en direction de {destination}"}},"on ramp":{default:{default:"Prendre la sortie",name:"Prendre la sortie sur {way_name}",destination:"Prendre la sortie en direction de {destination}"},left:{default:"Prendre la sortie à gauche",name:"Prendre la sortie à gauche sur {way_name}",destination:"Prendre la sortie à gauche en direction de {destination}"},right:{default:"Prendre la sortie à droite",name:"Prendre la sortie à droite sur {way_name}",destination:"Prendre la sortie à droite en direction de {destination}"},"sharp left":{default:"Prendre la sortie à gauche",name:"Prendre la sortie à gauche sur {way_name}",destination:"Prendre la sortie à gauche en direction de {destination}"},"sharp right":{default:"Prendre la sortie à droite",name:"Prendre la sortie à droite sur {way_name}",destination:"Prendre la sortie à droite en direction de {destination}"},"slight left":{default:"Prendre la sortie à gauche",name:"Prendre la sortie à gauche sur {way_name}",destination:"Prendre la sortie à gauche en direction de {destination}"},"slight right":{default:"Prendre la sortie à droite",name:"Prendre la sortie à droite sur {way_name}",destination:"Prendre la sortie à droite en direction de {destination}"}},rotary:{default:{default:{default:"Entrer dans le rond-point",name:"Entrer dans le rond-point et sortir par {way_name}",destination:"Entrer dans le rond-point et sortir en direction de {destination}"},name:{default:"Entrer dans le rond-point {rotary_name}",name:"Entrer dans le rond-point {rotary_name} et sortir par {way_name}",destination:"Entrer dans le rond-point {rotary_name} et sortir en direction de {destination}"},exit:{default:"Entrer dans le rond-point et prendre la {exit_number} sortie",name:"Entrer dans le rond-point et prendre la {exit_number} sortie sur {way_name}",destination:"Entrer dans le rond-point et prendre la {exit_number} sortie en direction de {destination}"},name_exit:{default:"Entrer dans le rond-point {rotary_name} et prendre la {exit_number} sortie",name:"Entrer dans le rond-point {rotary_name} et prendre la {exit_number} sortie sur {way_name}",destination:"Entrer dans le rond-point {rotary_name} et prendre la {exit_number} sortie en direction de {destination}"}}},roundabout:{default:{exit:{default:"Entrer dans le rond-point et prendre la {exit_number} sortie",name:"Entrer dans le rond-point et prendre la {exit_number} sortie sur {way_name}",destination:"Entrer dans le rond-point et prendre la {exit_number} sortie en direction de {destination}"},default:{default:"Entrer dans le rond-point",name:"Entrer dans le rond-point et sortir par {way_name}",destination:"Entrer dans le rond-point et sortir en direction de {destination}"}}},"roundabout turn":{default:{default:"Au rond-point, tourner {modifier}",name:"Au rond-point, tourner {modifier} sur {way_name}",destination:"Au rond-point, tourner {modifier} en direction de {destination}"},left:{default:"Au rond-point, tourner à gauche",name:"Au rond-point, tourner à gauche sur {way_name}",destination:"Au rond-point, tourner à gauche en direction de {destination}"},right:{default:"Au rond-point, tourner à droite",name:"Au rond-point, tourner à droite sur {way_name}",destination:"Au rond-point, tourner à droite en direction de {destination}"},straight:{default:"Au rond-point, continuer tout droit",name:"Au rond-point, continuer tout droit sur {way_name}",destination:"Au rond-point, continuer tout droit en direction de {destination}"}},turn:{default:{default:"Tourner {modifier}",name:"Tourner {modifier} sur {way_name}",destination:"Tourner {modifier} en direction de {destination}"},left:{default:"Tourner à gauche",name:"Tourner à gauche sur {way_name}",destination:"Tourner à gauche en direction de {destination}"},right:{default:"Tourner à droite",name:"Tourner à droite sur {way_name}",destination:"Tourner à droite en direction de {destination}"},straight:{default:"Aller tout droit",name:"Aller tout droit sur {way_name}",destination:"Aller tout droit en direction de {destination}"}},"use lane":{no_lanes:{default:"Continuer tout droit"},default:{default:"{lane_instruction} pour continuer {modifier}"},straight:{default:"{lane_instruction}"},left:{default:"{lane_instruction} pour tourner à gauche"},right:{default:"{lane_instruction} pour tourner à droite"}}}}},{}],7:[function(a,b,c){b.exports={meta:{capitalizeFirstLetter:!0},v5:{constants:{ordinalize:{1:"eerste",2:"tweede",3:"derde",4:"vierde",5:"vijfde",6:"zesde",7:"zevende",8:"achtste",9:"negende",10:"tiende"},direction:{north:"noord",northeast:"noordoost",east:"oost",southeast:"zuidoost",south:"zuid",southwest:"zuidwest",west:"west",northwest:"noordwest"},modifier:{left:"links",right:"rechts","sharp left":"linksaf","sharp right":"rechtsaf","slight left":"links","slight right":"rechts",straight:"rechtdoor",uturn:"omkeren"},lanes:{xo:"Rechts aanhouden",ox:"Links aanhouden",xox:"In het midden blijven",oxo:"Links of rechts blijven"}},modes:{ferry:{default:"Neem het veer",name:"Neem het veer {way_name}",destination:"Neem het veer naar {destination}"}},arrive:{default:{default:"Je bent gearriveerd op de {nth} bestemming."},left:{default:"Je bent gearriveerd. De {nth} bestemming bevindt zich links."},right:{default:"Je bent gearriveerd. De {nth} bestemming bevindt zich rechts."},"sharp left":{default:"Je bent gearriveerd. De {nth} bestemming bevindt zich links."},"sharp right":{default:"Je bent gearriveerd. De {nth} bestemming bevindt zich rechts."},"slight right":{default:"Je bent gearriveerd. De {nth} bestemming bevindt zich rechts."},"slight left":{default:"Je bent gearriveerd. De {nth} bestemming bevindt zich links."},straight:{default:"Je bent gearriveerd. De {nth} bestemming bevindt zich voor je."}},continue:{default:{default:"Ga {modifier}",name:"Ga {modifier} naar {way_name}",destination:"Ga {modifier} richting {destination}"},"slight left":{default:"Links aanhouden",name:"Links aanhouden naar {way_name}",destination:"Links aanhouden richting {destination}"},"slight right":{default:"Rechts aanhouden",name:"Rechts aanhouden naar {way_name}",destination:"Rechts aanhouden richting {destination}"},uturn:{default:"Keer om",name:"Keer om naar {way_name}",destination:"Keer om richting {destination}"}},depart:{default:{default:"Vertrek in {direction}elijke richting",name:"Neem {way_name} in {direction}elijke richting"}},"end of road":{default:{default:"Ga {modifier}",name:"Ga {modifier} naar {way_name}",destination:"Ga {modifier} richting {destination}"},straight:{default:"Ga in de aangegeven richting",name:"Ga naar {way_name}",destination:"Ga richting {destination}"},uturn:{default:"Keer om",name:"Keer om naar {way_name}",destination:"Keer om richting {destination}"}},fork:{default:{default:"Ga {modifier} op de splitsing",name:"Ga {modifier} op de splitsing naar {way_name}",destination:"Ga {modifier} op de splitsing richting {destination}"},"slight left":{default:"Links aanhouden op de splitsing",name:"Links aanhouden op de splitsing naar {way_name}",destination:"Links aanhouden op de splitsing richting {destination}"},"slight right":{default:"Rechts aanhouden op de splitsing",name:"Rechts aanhouden op de splitsing naar {way_name}",destination:"Rechts aanhouden op de splitsing richting {destination}"},"sharp left":{default:"Linksaf op de splitsing",name:"Linksaf op de splitsing naar {way_name}",destination:"Linksaf op de splitsing richting {destination}"},"sharp right":{default:"Rechtsaf op de splitsing",name:"Rechtsaf op de splitsing naar {way_name}",destination:"Rechtsaf op de splitsing richting {destination}"},uturn:{default:"Keer om",name:"Keer om naar {way_name}",destination:"Keer om richting {destination}"}},merge:{default:{default:"Bij de splitsing {modifier}",name:"Bij de splitsing {modifier} naar {way_name}",destination:"Bij de splitsing {modifier} richting {destination}"},"slight left":{default:"Bij de splitsing links aanhouden",name:"Bij de splitsing links aanhouden naar {way_name}",destination:"Bij de splitsing links aanhouden richting {destination}"},"slight right":{default:"Bij de splitsing rechts aanhouden",name:"Bij de splitsing rechts aanhouden naar {way_name}",destination:"Bij de splitsing rechts aanhouden richting {destination}"},"sharp left":{default:"Bij de splitsing linksaf",name:"Bij de splitsing linksaf naar {way_name}",destination:"Bij de splitsing linksaf richting {destination}"},"sharp right":{default:"Bij de splitsing rechtsaf",name:"Bij de splitsing rechtsaf naar {way_name}",destination:"Bij de splitsing rechtsaf richting {destination}"},uturn:{default:"Keer om",name:"Keer om naar {way_name}",destination:"Keer om richting {destination}"}},"new name":{default:{default:"Ga {modifier}",name:"Ga {modifier} naar {way_name}",destination:"Ga {modifier} richting {destination}"},"sharp left":{default:"Linksaf",name:"Linksaf naar {way_name}",destination:"Linksaf richting {destination}"},"sharp right":{default:"Rechtsaf",name:"Rechtsaf naar {way_name}",destination:"Rechtsaf richting {destination}"},"slight left":{default:"Links aanhouden",name:"Links aanhouden naar {way_name}",destination:"Links aanhouden richting {destination}"},"slight right":{default:"Rechts aanhouden",name:"Rechts aanhouden naar {way_name}",destination:"Rechts aanhouden richting {destination}"},uturn:{default:"Keer om",name:"Keer om naar {way_name}",destination:"Keer om richting {destination}"}},notification:{default:{default:"Ga {modifier}",name:"Ga {modifier} naar {way_name}",destination:"Ga {modifier} richting {destination}"},uturn:{default:"Keer om",name:"Keer om naar {way_name}",destination:"Keer om richting {destination}"}},"off ramp":{default:{default:"Neem de afrit",name:"Neem de afrit naar {way_name}",destination:"Neem de afrit richting {destination}"},left:{default:"Neem de afrit links",name:"Neem de afrit links naar {way_name}",destination:"Neem de afrit links richting {destination}"},right:{default:"Neem de afrit rechts",name:"Neem de afrit rechts naar {way_name}",destination:"Neem de afrit rechts richting {destination}"},"sharp left":{default:"Neem de afrit links",name:"Neem de afrit links naar {way_name}",destination:"Neem de afrit links richting {destination}"},"sharp right":{default:"Neem de afrit rechts",name:"Neem de afrit rechts naar {way_name}",destination:"Neem de afrit rechts richting {destination}"},"slight left":{default:"Neem de afrit links",name:"Neem de afrit links naar {way_name}",destination:"Neem de afrit links richting {destination}"},"slight right":{default:"Neem de afrit rechts",name:"Neem de afrit rechts naar {way_name}",destination:"Neem de afrit rechts richting {destination}"}},"on ramp":{default:{default:"Neem de oprit",name:"Neem de oprit naar {way_name}",destination:"Neem de oprit richting {destination}"},left:{default:"Neem de oprit links",name:"Neem de oprit links naar {way_name}",destination:"Neem de oprit links richting {destination}"},right:{default:"Neem de oprit rechts",name:"Neem de oprit rechts naar {way_name}",destination:"Neem de oprit rechts richting {destination}"},"sharp left":{default:"Neem de oprit links",name:"Neem de oprit links naar {way_name}",destination:"Neem de oprit links richting {destination}"},"sharp right":{default:"Neem de oprit rechts",name:"Neem de oprit rechts naar {way_name}",destination:"Neem de oprit rechts richting {destination}"},"slight left":{default:"Neem de oprit links",name:"Neem de oprit links naar {way_name}",destination:"Neem de oprit links richting {destination}"},"slight right":{default:"Neem de oprit rechts",name:"Neem de oprit rechts naar {way_name}",destination:"Neem de oprit rechts richting {destination}"}},rotary:{default:{default:{default:"Ga het knooppunt op",name:"Verlaat het knooppunt naar {way_name}",destination:"Verlaat het knooppunt richting {destination}"},name:{default:"Ga het knooppunt {rotary_name} op",name:"Verlaat het knooppunt {rotary_name} naar {way_name}",destination:"Verlaat het knooppunt {rotary_name} richting {destination}"},exit:{default:"Ga het knooppunt op en neem afslag {exit_number}",name:"Ga het knooppunt op en neem afslag {exit_number} naar {way_name}",destination:"Ga het knooppunt op en neem afslag {exit_number} richting {destination}"},name_exit:{default:"Ga het knooppunt {rotary_name} op en neem afslag {exit_number}",name:"Ga het knooppunt {rotary_name} op en neem afslag {exit_number} naar {way_name}",destination:"Ga het knooppunt {rotary_name} op en neem afslag {exit_number} richting {destination}"}}},roundabout:{default:{exit:{default:"Ga de rotonde op en neem afslag {exit_number}",name:"Ga de rotonde op en neem afslag {exit_number} naar {way_name}",destination:"Ga de rotonde op en neem afslag {exit_number} richting {destination}"},default:{default:"Ga de rotonde op",name:"Verlaat de rotonde naar {way_name}",destination:"Verlaat de rotonde richting {destination}"}}},"roundabout turn":{default:{default:"Ga {modifier} op de rotonde",name:"Ga {modifier} op de rotonde naar {way_name}",destination:"Ga {modifier} op de rotonde richting {destination}"},left:{default:"Ga links op de rotonde",name:"Ga links op de rotonde naar {way_name}",destination:"Ga links op de rotonde richting {destination}"},right:{default:"Ga rechts op de rotonde",name:"Ga rechts op de rotonde naar {way_name}",destination:"Ga rechts op de rotonde richting {destination}"},straight:{default:"Rechtdoor op de rotonde",name:"Rechtdoor op de rotonde naar {way_name}",destination:"Rechtdoor op de rotonde richting {destination}"}},turn:{default:{default:"Ga {modifier}",name:"Ga {modifier} naar {way_name}",destination:"Ga {modifier} richting {destination}"},left:{default:"Ga linksaf",name:"Ga linksaf naar {way_name}",destination:"Ga linksaf richting {destination}"},right:{default:"Ga rechtsaf",name:"Ga rechtsaf naar {way_name}",destination:"Ga rechtsaf richting {destination}"},straight:{default:"Ga rechtdoor",name:"Ga rechtdoor naar {way_name}",destination:"Ga rechtdoor richting {destination}"}},"use lane":{no_lanes:{default:"Rechtdoor"},default:{default:"{lane_instruction} ga {modifier}"},straight:{default:"{lane_instruction}"},left:{default:"{lane_instruction} om links te gaan"},right:{default:"{lane_instruction} om rechts te gaan"}}}}},{}],8:[function(a,b,c){b.exports={meta:{capitalizeFirstLetter:!1},v5:{constants:{ordinalize:{1:"第一",2:"第二",3:"第三",4:"第四",5:"第五",6:"第六",7:"第七",8:"第八",9:"第九",10:"第十"},direction:{north:"北",northeast:"东北",east:"东",southeast:"东南",south:"南",southwest:"西南",west:"西",northwest:"西北"},modifier:{left:"向左",right:"向右","sharp left":"向左","sharp right":"向右","slight left":"向左","slight right":"向右",straight:"直行",uturn:"调头"},lanes:{xo:"靠右直行",ox:"靠左直行",xox:"保持在道路中间直行",oxo:"保持在道路两侧直行"}},modes:{ferry:{default:"乘坐轮渡",name:"乘坐{way_name}轮渡",destination:"乘坐开往{destination}的轮渡"}},arrive:{default:{default:"您已经到达您的{nth}个目的地"},left:{default:"您已经到达您的{nth}个目的地，在道路左侧"},right:{default:"您已经到达您的{nth}个目的地，在道路右侧"},"sharp left":{default:"您已经到达您的{nth}个目的地，在道路左侧"},"sharp right":{default:"您已经到达您的{nth}个目的地，在道路右侧"},"slight right":{default:"您已经到达您的{nth}个目的地，在道路右侧"},"slight left":{default:"您已经到达您的{nth}个目的地，在道路左侧"},straight:{default:"您已经到达您的{nth}个目的地，在您正前方"}},continue:{default:{default:"继续{modifier}",name:"继续{modifier}，上{way_name}",destination:"继续{modifier}行驶，前往{destination}"},uturn:{default:"调头",name:"调头上{way_name}",destination:"调头后前往{destination}"}},depart:{default:{default:"出发向{direction}",name:"出发向{direction}，上{way_name}"}},"end of road":{default:{default:"{modifier}行驶",name:"{modifier}行驶，上{way_name}",destination:"{modifier}行驶，前往{destination}"},straight:{default:"继续直行",name:"继续直行，上{way_name}",destination:"继续直行，前往{destination}"},uturn:{default:"在道路尽头调头",name:"在道路尽头调头上{way_name}",destination:"在道路尽头调头，前往{destination}"}},fork:{default:{default:"在岔道保持{modifier}",name:"在岔道保持{modifier}，上{way_name}",destination:"在岔道保持{modifier}，前往{destination}"},uturn:{default:"调头",name:"调头，上{way_name}",destination:"调头，前往{destination}"}},merge:{default:{default:"{modifier}并道",name:"{modifier}并道，上{way_name}",destination:"{modifier}并道，前往{destination}"},uturn:{default:"调头",name:"调头，上{way_name}",destination:"调头，前往{destination}"}},"new name":{default:{default:"继续{modifier}",name:"继续{modifier}，上{way_name}",destination:"继续{modifier}，前往{destination}"},uturn:{default:"调头",name:"调头，上{way_name}",destination:"调头，前往{destination}"}},notification:{default:{default:"继续{modifier}",name:"继续{modifier}，上{way_name}",destination:"继续{modifier}，前往{destination}"},uturn:{default:"调头",name:"调头，上{way_name}",destination:"调头，前往{destination}"}},"off ramp":{default:{default:"上匝道",name:"通过匝道驶入{way_name}",destination:"通过匝道前往{destination}"},left:{default:"通过左边的匝道",name:"通过左边的匝道驶入{way_name}",destination:"通过左边的匝道前往{destination}"},right:{default:"通过右边的匝道",name:"通过右边的匝道驶入{way_name}",destination:"通过右边的匝道前往{destination}"}},"on ramp":{default:{default:"通过匝道",name:"通过匝道驶入{way_name}",destination:"通过匝道前往{destination}"},left:{default:"通过左边的匝道",name:"通过左边的匝道驶入{way_name}",destination:"通过左边的匝道前往{destination}"},right:{default:"通过右边的匝道",name:"通过右边的匝道驶入{way_name}",destination:"通过右边的匝道前往{destination}"}},rotary:{default:{default:{default:"进入环岛",name:"通过环岛后驶入{way_name}",destination:"通过环岛前往{destination}"},name:{default:"进入{rotary_name}环岛",name:"通过{rotary_name}环岛后驶入{way_name}",destination:"通过{rotary_name}环岛后前往{destination}"},exit:{default:"进入环岛并从{exit_number}出口驶出",name:"进入环岛后从{exit_number}出口驶出进入{way_name}",destination:"进入环岛后从{exit_number}出口驶出前往{destination}"},name_exit:{default:"进入{rotary_name}环岛后从{exit_number}出口驶出",name:"进入{rotary_name}环岛后从{exit_number}出口驶出进入{way_name}",destination:"进入{rotary_name}环岛后从{exit_number}出口驶出前往{destination}"}}},roundabout:{default:{exit:{default:"进入环岛后从{exit_number}出口驶出",name:"进入环岛后从{exit_number}出口驶出前往{way_name}",destination:"进入环岛后从{exit_number}出口驶出前往{destination}"},default:{default:"进入环岛",name:"通过环岛后驶入{way_name}",destination:"通过环岛后前往{destination}"}}},"roundabout turn":{default:{default:"在环岛{modifier}行驶",name:"在环岛{modifier}行驶，上{way_name}",destination:"在环岛{modifier}行驶，前往{destination}"},left:{default:"在环岛左转",name:"在环岛左转，上{way_name}",destination:"在环岛左转，前往{destination}"},right:{default:"在环岛右转",name:"在环岛右转，上{way_name}",destination:"在环岛右转，前往{destination}"},straight:{default:"在环岛继续直行",name:"在环岛继续直行，上{way_name}",destination:"在环岛继续直行，前往{destination}"}},turn:{default:{default:"{modifier}转弯",name:"{modifier}转弯，上{way_name}",destination:"{modifier}转弯，前往{destination}"},left:{default:"左转",name:"左转，上{way_name}",destination:"左转，前往{destination}"},right:{default:"右转",name:"右转，上{way_name}",destination:"右转，前往{destination}"},straight:{default:"直行",name:"直行，上{way_name}",destination:"直行，前往{destination}"}},"use lane":{no_lanes:{default:"继续直行"},default:{default:"{lane_instruction}然后{modifier}"},straight:{default:"{lane_instruction}"},left:{default:"{lane_instruction}然后左转"},right:{default:"{lane_instruction}然后右转"}}}}},{}],9:[function(a,b,c){"use strict";function d(a,b){a=Math.round(a*b),a<<=1,a<0&&(a=~a);for(var c="";a>=32;)c+=String.fromCharCode((32|31&a)+63),a>>=5;return c+=String.fromCharCode(a+63)}function e(a){for(var b=[],c=0;c<a.length;c++)b.push(a[c].slice().reverse());return b}var f={};f.decode=function(a,b){for(var c,d,e=0,f=0,g=0,h=[],i=0,j=0,k=null,l=Math.pow(10,b||5);e<a.length;){k=null,i=0,j=0;do k=a.charCodeAt(e++)-63,j|=(31&k)<<i,i+=5;while(k>=32);c=1&j?~(j>>1):j>>1,i=j=0;do k=a.charCodeAt(e++)-63,j|=(31&k)<<i,i+=5;while(k>=32);d=1&j?~(j>>1):j>>1,f+=c,g+=d,h.push([f/l,g/l])}return h},f.encode=function(a,b){if(!a.length)return"";for(var c=Math.pow(10,b||5),e=d(a[0][0],c)+d(a[0][1],c),f=1;f<a.length;f++){var g=a[f],h=a[f-1];e+=d(g[0]-h[0],c),e+=d(g[1]-h[1],c)}return e},f.fromGeoJSON=function(a,b){if(a&&"Feature"===a.type&&(a=a.geometry),!a||"LineString"!==a.type)throw new Error("Input must be a GeoJSON LineString");return f.encode(e(a.coordinates),b)},f.toGeoJSON=function(a,b){var c=f.decode(a,b);return{type:"LineString",coordinates:e(c)}},"object"==typeof b&&b.exports&&(b.exports=f)},{}],10:[function(a,b,c){!function(){"use strict";function a(a,b,c,d){a=a||{},a.color=a.color||"#000000",a.width=a.width||5,a.name=a.name||"",a.clear=a.clear||!1;var e=L.DomUtil.create("div","cyPolylineDialogMainDiv"),f=L.DomUtil.create("div","cyPolylineDialogInputDiv",e),g=L.DomUtil.create("div","cyPolylineDialogColorDiv",f);g.innerHTML="Color:&nbsp;";var h=L.DomUtil.create("input","cyPolylineDialogColorInput",g);h.type="color",h.value=a.color,h.id="cyPolylineDialogColorInput";var i=L.DomUtil.create("div","cyPolylineDialogColorDiv",f);i.innerHTML="Width:&nbsp;";var j=L.DomUtil.create("input","cyPolylineDialogWidthInput",i);j.type="number",j.setAttribute("min",0),j.setAttribute("max",20),j.setAttribute("step",1),j.value=a.width,j.id="cyPolylineDialogWidthInput";var k=L.DomUtil.create("div","cyPolylineDialogNameDiv",f);k.innerHTML="Name:&nbsp;";var l=L.DomUtil.create("input","cyPolylineDialogNameDiv",k);if(l.id="cyPolylineDialogNameInput",l.value=a.name,!d){var m=L.DomUtil.create("div","cyPolylineDialogClearDiv",f);m.innerHTML="Clear route:&nbsp;";var n=L.DomUtil.create("input","cyPolylineDialogClearDiv",m);n.type="checkbox",n.checked=a.clear,n.id="cyPolylineDialogNameInput"}var o=L.DomUtil.create("div","cyPolylineDialogButtonsDiv",e),p=L.DomUtil.create("button","cyPolylineDialogOkButton",o);p.setAttribute("type","button"),p.innerHTML="OK",d?L.DomEvent.on(p,"click",function(){a.color=h.value,a.width=j.value,a.name=l.value,a.clear=!1,b.closePopup(),d.setStyle({color:a.color,weight:a.width}),0<a.name.length?d.bindTooltip(a.name):d.unbindTooltip(),d.LrmExtensionsName=a.name}):L.DomEvent.on(p,"click",function(){a.color=h.value,a.width=j.value,a.name=l.value,a.clear=n.checked,b.closePopup(),c.RouteToLine(a)});var q=L.DomUtil.create("button","cyPolylineDialogCancelButton",o);return q.setAttribute("type","button"),q.innerHTML="Cancel",L.DomEvent.on(q,"click",function(){b.closePopup()}),L.popup({keepInView:!0,closeButton:!0,maxWidth:200,className:"cyPolylineDialog",autoClose:!1}).setContent(e).setLatLng(b.getCenter()).openOn(b),a}function c(b,c,d,e){return new a(b,c,d,e)}"undefined"!=typeof b&&b.exports&&(b.exports=c)}()},{}],11:[function(a,b,c){!function(){"use strict";L.Routing.Extensions.GraphHopperConverter=L.Class.extend({initialize:function(a){L.Util.setOptions(this,a)},createRoutes:function(a,b,c){for(var d=[],e=0;e<a.paths.length;e++){var f=a.paths[e],g=this._decodePolyline(f.points),h=this._mapWaypointIndices(b,f.instructions,g);d.push({name:"",coordinates:g,instructions:this._convertInstructions(f.instructions),summary:{totalDistance:f.distance,totalTime:f.time/1e3},inputWaypoints:b,waypoints:h.waypoints,actualWaypoints:h.waypoints,waypointIndices:h.waypointIndices})}return d},_toWaypoints:function(a,b){for(var c=[],d=0;d<b.length;d++)c.push({latLng:L.latLng(b[d]),name:a[d].name,options:a[d].options});return c},_decodePolyline:function(b){for(var c=a("polyline"),d=c.decode(b,5),e=new Array(d.length),f=0;f<d.length;f++)e[f]=L.latLng(d[f][0],d[f][1]);return e},_convertInstructions:function(a){for(var b={"-3":"SharpLeft","-2":"Left","-1":"SlightLeft",0:"Straight",1:"SlightRight",2:"Right",3:"SharpRight",4:"DestinationReached",5:"WaypointReached",6:"Roundabout"},c=[],d=0;a&&d<a.length;d++){var e=a[d];c.push({type:b[e.sign],text:e.text,distance:e.distance,time:e.time/1e3,index:e.interval[0],exit:e.exit_number})}return c},_mapWaypointIndices:function(a,b,c){var d,e=[],f=[];f.push(0),e.push(L.Routing.waypoint(c[0],a[0].name));for(var g=0;b&&g<b.length;g++)5===b[g].sign&&(d=b[g].interval[0],f.push(d),e.push({latLng:c[d],name:a[e.length+1].name}));return f.push(c.length-1),e.push({latLng:c[c.length-1],name:a[a.length-1].name}),{waypointIndices:f,waypoints:e}}}),L.Routing.Extensions.graphHopperConverter=function(a){return new L.Routing.Extensions.GraphHopperConverter(a)},"undefined"!=typeof b&&b.exports&&(b.exports=L.Routing.Extensions.graphHopperConverter)}()},{polyline:9}],12:[function(a,b,c){!function(){"use strict";L.Routing.Extensions.MapboxOsrmRouteConverter=L.Class.extend({initialize:function(a){L.Util.setOptions(this,a)},createRoutes:function(a,b,c){for(var d,e=[],f=0;f<a.routes.length;f++)d=this._convertRoute(a.routes[f]),d.inputWaypoints=b,d.waypoints=this._toWaypoints(b,a.waypoints),d.properties={isSimplified:!c||!c.geometryOnly||c.simplifyGeometry},e.push(d);return e},_convertRoute:function(b){var c;if(this.options.stepToText)c=this.options.stepToText;else{var d=a("osrm-text-instructions"),e=d("v5",this.options.language);c=e.compile.bind(e)}for(var f={name:"",coordinates:[],instructions:[],summary:{totalDistance:b.distance,totalTime:b.duration}},g=[],h=[],i=b.legs.length,j=b.legs[0].steps.length>0,k=0,l=0;l<i;l++){var m=b.legs[l];g.push(m.summary&&m.summary.charAt(0).toUpperCase()+m.summary.substring(1));for(var n=0;n<m.steps.length;n++){var o=m.steps[n],p=this._decodePolyline(o.geometry);f.coordinates.push.apply(f.coordinates,p);var q=this._maneuverToInstructionType(o.maneuver,l===i-1),r=this._maneuverToModifier(o.maneuver),s=c(o);q&&((0===l&&"depart"===o.maneuver.type||"arrive"===o.maneuver.type)&&h.push(k),f.instructions.push({type:q,distance:o.distance,time:o.duration,road:o.name,direction:this._bearingToDirection(o.maneuver.bearing_after),exit:o.maneuver.exit,index:k,mode:o.mode,modifier:r,text:s})),k+=p.length}}return f.name=g.join(", "),j?f.waypointIndices=h:f.coordinates=this._decodePolyline(b.geometry),f},_toWaypoints:function(a,b){for(var c=[],d=0;d<b.length;d++)c.push(L.Routing.waypoint(L.latLng(b[d].location[1],b[d].location[0]),a[d].name,a[d].options));return c},_decodePolyline:function(b){for(var c=a("polyline"),d=c.decode(b,this.options.polylinePrecision),e=new Array(d.length),f=d.length-1;f>=0;f--)e[f]=L.latLng(d[f]);return e},_bearingToDirection:function(a){var b=Math.round(a/45)%8;return["N","NE","E","SE","S","SW","W","NW"][b]},_maneuverToInstructionType:function(a,b){switch(a.type){case"new name":return"Continue";case"depart":return"Head";case"arrive":return b?"DestinationReached":"WaypointReached";case"roundabout":case"rotary":return"Roundabout";case"merge":case"fork":case"on ramp":case"off ramp":case"end of road":return this._camelCase(a.type);default:return this._camelCase(a.modifier)}},_maneuverToModifier:function(a){var b=a.modifier;switch(a.type){case"merge":case"fork":case"on ramp":case"off ramp":case"end of road":b=this._leftOrRight(b)}return b&&this._camelCase(b)},_camelCase:function(a){for(var b=a.split(" "),c="",d=0;d<b.length;d++)c+=b[d].charAt(0).toUpperCase()+b[d].substring(1);return c},_leftOrRight:function(a){return a.indexOf("left")>=0?"Left":"Right"}}),L.Routing.Extensions.mapboxOsrmRouteConverter=function(a){return new L.Routing.Extensions.MapboxOsrmRouteConverter(a)},"undefined"!=typeof b&&b.exports&&(b.exports=L.Routing.Extensions.mapboxOsrmRouteConverter)}()},{"osrm-text-instructions":2,polyline:9}],13:[function(a,b,c){(function(a){!function(){"use strict";var c="undefined"!=typeof window?window.L:"undefined"!=typeof a?a.L:null;c.Routing=c.Routing||{},c.Routing.Extensions.MapzenFormatter=c.Class.extend({options:{units:"metric",unitNames:{meters:"m",kilometers:"km",yards:"yd",miles:"mi",hours:"h",minutes:"mín",seconds:"s"},language:"en",roundingSensitivity:1,distanceTemplate:"{value} {unit}"},initialize:function(a){c.setOptions(this,a)},formatDistance:function(a){var b,d,e=this.options.unitNames;return"imperial"===this.options.units?(a*=1e3,a/=1.609344,d=a>=1e3?{value:this._round(a)/1e3,unit:e.miles}:{value:this._round(a/1.76),unit:e.yards}):(b=a,d={value:b>=1?b:1e3*b,unit:b>=1?e.kilometers:e.meters}),c.Util.template(this.options.distanceTemplate,d)},_round:function(a){var b=Math.pow(10,(Math.floor(a/this.options.roundingSensitivity)+"").length-1),c=Math.floor(a/b),d=c>5?b:b/2;return Math.round(a/d)*d},formatTime:function(a){return a>86400?Math.round(a/3600)+" h":a>3600?Math.floor(a/3600)+" h "+Math.round(a%3600/60)+" min":a>300?Math.round(a/60)+" min":a>60?Math.floor(a/60)+" min"+(a%60!==0?" "+a%60+" s":""):a+" s"},formatInstruction:function(a,b){return a.instruction},getIconName:function(a,b){switch(a.type){case 0:return"kNone";case 1:return"kStart";case 2:return"kStartRight";case 3:return"kStartLeft";case 4:return"kDestination";case 5:return"kDestinationRight";case 6:return"kDestinationLeft";case 7:return"kBecomes";case 8:return"kContinue";case 9:return"kSlightRight";case 10:return"kRight";case 11:return"kSharpRight";case 12:return"kUturnRight";case 13:return"kUturnLeft";case 14:return"kSharpLeft";case 15:return"kLeft";case 16:return"kSlightLeft";case 17:return"kRampStraight";case 18:return"kRampRight";case 19:return"kRampLeft";case 20:return"kExitRight";case 21:return"kExitLeft";case 22:return"kStayStraight";case 23:return"kStayRight";case 24:return"kStayLeft";case 25:return"kMerge";case 26:return"kRoundaboutEnter";case 27:return"kRoundaboutExit";case 28:return"kFerryEnter";case 29:return"kFerryExit";case 30:case 31:case 32:case 33:case 34:case 35:case 36:return a.edited_travel_type?"kTransit"+this._getCapitalizedName(a.edited_travel_type):"kTransit"}},_getInstructionTemplate:function(a,b){return a.instruction+" "+a.length},_getCapitalizedName:function(a){return a.charAt(0).toUpperCase()+a.slice(1)}}),c.Routing.Extensions.mapzenFormatter=function(a){return new c.Routing.Extensions.MapzenFormatter(a)},"undefined"!=typeof b&&b.exports&&(b.exports=c.Routing.Extensions.mapzenFormatter)}()}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],14:[function(a,b,c){!function(){"use strict";var c=a("polyline");L.Routing.Extensions.MapzenRouteConverter=L.Class.extend({initialize:function(a){L.Util.setOptions(this,a)},createRoutes:function(a,b,d){for(var e=[],f=[],g=0,h=0;h<a.trip.legs.length;h++){for(var i=c.decode(a.trip.legs[h].shape,6),j=0;j<i.length;j++)f.push(L.latLng(i[j][0],i[j][1]));for(var k=0;k<a.trip.legs[h].maneuvers.length;k++){var l=a.trip.legs[h].maneuvers[k];l.distance=a.trip.legs[h].maneuvers[k].length,l.index=g+a.trip.legs[h].maneuvers[k].begin_shape_index,e.push(l)}"multimodal"===d.costing&&(e=this._unifyTransitManeuver(e)),g+=a.trip.legs[h].maneuvers[a.trip.legs[h].maneuvers.length-1].begin_shape_index}var m,n=this._toWaypoints(b,a.trip.locations);"multimodal"==d.costing&&(m=this._getSubRoutes(a.trip.legs));var o=[{name:this._trimLocationKey(b[0].latLng)+" , "+this._trimLocationKey(b[1].latLng),unit:a.trip.units,costing:d.costing,coordinates:f,subRoutes:m,instructions:e,summary:a.trip.summary?this._convertSummary(a.trip.summary):[],inputWaypoints:b,waypoints:n,waypointIndices:this._clampIndices([0,a.trip.legs[0].maneuvers.length],f)}];return o},_unifyTransitManeuver:function(a){for(var b,c=a,d=0;d<c.length;d++)if(30==c[d].type){b=c[d].travel_type;break}for(var e=0;e<c.length;e++)c[e].type>29&&(c[e].edited_travel_type=b);return c},_toWaypoints:function(a,b){var c,d=[];for(c=0;c<b.length;c++)d.push(L.Routing.waypoint(L.latLng([b[c].lat,b[c].lon]),"name",{}));return d},_getSubRoutes:function(a){for(var b=[],d=0;d<a.length;d++){for(var e,f=c.decode(a[d].shape,6),g=[],h=0;h<a[d].maneuvers.length;h++){var i=a[d].maneuvers[h],j=i.travel_type;j===e&&31!==i.type||(i.begin_shape_index>0&&g.push(i.begin_shape_index),i.transit_info?b.push({travel_type:j,styles:this._getPolylineColor(i.transit_info.color)}):b.push({travel_type:j})),e=j}g.push(f.length);for(var k=0,l=0;l<g.length;l++){var m=[],n=0;l!==g.length-1&&(n=1);for(var o=k;o<g[l]+n;o++)m.push(f[o]);var p=m;k=g[l],
b[l].coordinates=p}}return b},_trimLocationKey:function(a){var b=(a.lat,a.lng,Math.floor(1e3*a.lat)/1e3),c=Math.floor(1e3*a.lng)/1e3;return b+" , "+c},_convertSummary:function(a){return{totalDistance:a.length,totalTime:a.time}},_getPolylineColor:function(a){var b=a>>16&255,c=a>>8&255,d=a>>0&255,e=.299*b+.587*c+.114*d,f=e>187,g=16777216|16777215&a,h=g.toString(16).substring(1,7),i=[f?{color:"#000",opacity:.4,weight:10}:{color:"#fff",opacity:.8,weight:10},{color:"#"+h.toUpperCase(),opacity:1,weight:6}];return i},_clampIndices:function(a,b){var c,d=b.length-1;for(c=0;c<a.length;c++)a[c]=Math.min(d,Math.max(a[c],0))}}),L.Routing.Extensions.mapzenRouteConverter=function(a){return new L.Routing.Extensions.MapzenRouteConverter(a)},"undefined"!=typeof b&&b.exports&&(b.exports=L.Routing.Extensions.mapzenRouteConverter)}()},{polyline:9}],15:[function(a,b,c){!function(){"use strict";var c=function(c,d,e){L.DomEvent.stopPropagation(c);var f=L.DomUtil.create("div","PolylineMenu-MainDiv"),g=L.DomUtil.create("button","PolylineMenu-EditPolylineButton",f);g.setAttribute("type","button"),g.innerHTML="Edit";var h;h="undefined"!=typeof b&&b.exports?a("./L.Routing.Extensions.Dialogs"):polylineDialog,L.DomEvent.on(g,"click",function(){d.closePopup();var e={color:c.target.options.color,width:c.target.options.weight,name:c.target.LrmExtensionsName};e="undefined"!=typeof b&&b.exports?a("./L.Routing.Extensions.Dialogs")(e,d,null,c.target):polylineDialog(e,d,null,c.target)});var i=L.DomUtil.create("button","PolylineMenu-DeletePolylineButton",f);i.setAttribute("type","button"),i.innerHTML="Delete",L.DomEvent.on(i,"click",function(){d.closePopup(),e.getRoutePolylines().removeLayer(c.target)});var j=L.DomUtil.create("button","PolylineMenu-CancelPolylineButton",f);j.setAttribute("type","button"),j.innerHTML="Cancel",j.id="CancelPolylineButton",L.DomEvent.on(j,"click",function(){d.closePopup()}),L.popup({keepInView:!0,closeButton:!1,maxWidth:300,className:"PolylineMenu"}).setContent(f).setLatLng(c.latlng).openOn(d),document.getElementById("CancelPolylineButton").focus()};"undefined"!=typeof b&&b.exports&&(b.exports=c)}()},{"./L.Routing.Extensions.Dialogs":10}],16:[function(a,b,c){!function(){"use strict";L.Routing.Extensions.Router=L.Class.extend({options:{serviceUrl:"https://router.project-osrm.org/route/v1",profile:"driving",timeout:3e4,routingOptions:{alternatives:!0,steps:!0},polylinePrecision:5,useHints:!0,suppressDemoServerWarning:!1,language:"en"},transitMode:"car",initialize:function(a){L.Util.setOptions(this,a),this._hints={locations:{}},!this.options.suppressDemoServerWarning&&this.options.serviceUrl.indexOf("//router.project-osrm.org")>=0&&"osrm"===this.options.provider&&alert("You are using OSRM's demo server. Please note that it is **NOT SUITABLE FOR PRODUCTION USE**.\nRefer to the demo server's usage policy: https://github.com/Project-OSRM/osrm-backend/wiki/Api-usage-policy\n\nTo change, set the serviceUrl option.\n\nPlease do not report issues with this server to neither Leaflet Routing Machine or OSRM or lrm-extensions - it's for\ndemo only, and will sometimes not be available, or work in unexpected ways.\n\nPlease set up your own OSRM server, or use a paid service provider for production.")},route:function(b,c,d,e){e=L.extend({},this.options.routingOptions,e);var f,g=this.buildRouteUrl(b,e),h=!1;f=setTimeout(function(){h=!0,c.call(d||c,{status:-1,message:this.options.provider+" request timed out."})},this.options.timeout);for(var i,j=[],k=0;k<b.length;k++)i=b[k],j.push(new L.Routing.Waypoint(i.latLng,i.name,i.options));var l=a("corslite"),m=l(g,L.bind(function(a,b){var i,k={};if(clearTimeout(f),h)m.abort();else{if(a)k.message="HTTP request failed: "+a.type+(a.target&&a.target.status?" HTTP "+a.target.status+": "+a.target.statusText:""),k.url=g,k.status=-1,k.target=a;else try{i=JSON.parse(b.responseText);try{return this._routeDone(i,j,e,c,d)}catch(a){k.status=-3,k.message=a.toString()}}catch(a){k.status=-2,k.message="Error parsing "+this.options.provider+" response: "+a.toString()}c.call(d||c,k)}},this));return m},_routeDoneMapboxOsrm:function(b,c,d,e,f){if(f=f||e,"Ok"!==b.code)return void e.call(f,{status:b.code});var g=a("./L.Routing.Extensions.MapboxOsrmRouteConverter")(this.options),h=g.createRoutes(b,c,d);e.call(f,null,h)},_routeDoneGraphHopper:function(b,c,d,e,f){if(f=f||e,b.info.errors&&0<b.info.errors.length)return void e.call(f,{status:b.info.errors[0].details,message:b.info.errors[0].message});var g=a("./L.Routing.Extensions.GraphHopperRouteConverter")(this.options),h=g.createRoutes(b,c,d);e.call(f,null,h)},_routeDoneMapzen:function(b,c,d,e,f){if(f=f||e,0!==b.trip.status)return void e.call(f,{status:b.status,message:b.status_message});var g=a("./L.Routing.Extensions.MapzenRouteConverter")(this.options),h=g.createRoutes(b,c,d);e.call(f,null,h)},_routeDone:function(a,b,c,d,e){switch(this.options.provider){case"graphhopper":return this._routeDoneGraphHopper(a,b,c,d,e);case"mapbox":return this._routeDoneMapboxOsrm(a,b,c,d,e);case"mapzen":return this._routeDoneMapzen(a,b,c,d,e);case"osrm":return this._routeDoneMapboxOsrm(a,b,c,d,e)}},_buildRouteUrlGraphHopper:function(a,b){var c;switch(this.options.transitMode){case"bike":c="bike";break;case"pedestrian":c="foot";break;case"car":c="car"}for(var d=[],e=0;e<a.length;e++)d.push("point="+a[e].latLng.lat+","+a[e].latLng.lng);return"https://graphhopper.com/api/1/route?"+d.join("&")+"&instructions=true&type=json&key="+this.options.providerKeys.GraphHopper+"&locale="+this.options.language+"&vehicle="+c},_buildRouteUrlMapboxOsrm:function(a,b){var c,d,e;if("osrm"===this.options.provider)d="https://router.project-osrm.org/route/v1",c="driving",e=!0;else if("mapbox"===this.options.provider)switch(d="https://api.mapbox.com/directions/v5",e=!1,this.options.transitMode){case"bike":c="mapbox/cycling";break;case"pedestrian":c="mapbox/walking";break;case"car":c="mapbox/driving"}for(var f,g,h=[],i=[],j=0;j<a.length;j++)f=a[j],g=f.latLng,h.push(g.lng+","+g.lat),i.push(this._hints.locations[g.lat+","+g.lng]||"");return d+"/"+c+"/"+h.join(";")+"?"+(b.geometryOnly?b.simplifyGeometry?"":"overview=full":"overview=false")+"&alternatives=true&steps=true"+(e?"&hints="+i.join(";"):"")+(b.allowUTurns?"&continue_straight="+!b.allowUTurns:"")+("mapbox"===this.options.provider?"&access_token="+this.options.providerKeys.Mapbox:"")},_buildRouteUrlMapzen:function(a,b){var c,d;switch(this.options.transitMode){case"bike":c="bicycle",d={bicycle:{bicycle_type:"Mountain",cycling_speed:"20.0",use_roads:"0",use_hills:"1"}};break;case"pedestrian":c="pedestrian",d={pedestrian:{walking_speed:"4.0"}};break;case"car":c="auto",d={auto:{country_crossing_cost:"60"}}}for(var e=[],f=0;f<a.length;f++){var g=0===f||a.length-1===f?"break":"through";e.push({lat:a[f].latLng.lat,lon:a[f].latLng.lng,type:g})}var h=JSON.stringify({locations:e,costing:c,costing_options:d,directions_options:{language:this.options.language}});return"https://valhalla.mapzen.com/route?json="+h+"&api_key="+this.options.providerKeys.Mapzen},buildRouteUrl:function(a,b){switch(this.options.provider){case"graphhopper":return this._buildRouteUrlGraphHopper(a,b);case"mapbox":return this._buildRouteUrlMapboxOsrm(a,b);case"mapzen":return this._buildRouteUrlMapzen(a,b);case"osrm":return this._buildRouteUrlMapboxOsrm(a,b)}}}),L.Routing.Extensions.router=function(a){return new L.Routing.Extensions.Router(a)},"undefined"!=typeof b&&b.exports&&(b.exports=L.Routing.Extensions.router)}()},{"./L.Routing.Extensions.GraphHopperRouteConverter":11,"./L.Routing.Extensions.MapboxOsrmRouteConverter":12,"./L.Routing.Extensions.MapzenRouteConverter":14,corslite:1}],17:[function(a,b,c){!function(){"use strict";L.Routing.Extensions=L.Routing.Control.extend({_routePolylines:L.layerGroup(),_gpxRoute:null,getTransitMode:function(){return this.options.transitMode},getProvider:function(){return this.options.provider},initialize:function(b){b.language=b.language||"en",b.transitMode=b.transitMode||"car",b.transitMode=b.transitMode.toLowerCase(),b.provider=b.provider||"osrm",b.provider=b.provider.toLowerCase(),b.providerKeys=b.providerKeys||{},b.providerKeys.GraphHopper=b.providerKeys.GraphHopper||"",b.providerKeys.Mapzen=b.providerKeys.Mapzen||"",b.providerKeys.Mapbox=b.providerKeys.Mapbox||"",0===b.providerKeys.GraphHopper.length&&0===b.providerKeys.Mapzen.length&&0===b.providerKeys.Mapbox.length&&(b.provider="osrm"),-1===["graphhopper","mapzen","mapbox","osrm"].indexOf(b.provider)&&(b.provider="osrm"),-1===["bike","pedestrian","car"].indexOf(b.transitMode)&&(b.transitMode="car"),0===b.providerKeys.GraphHopper.length&&"graphhopper"===b.provider&&(b.provider="osrm"),0===b.providerKeys.Mapzen.length&&"mapzen"===b.provider&&(b.provider="osrm"),0===b.providerKeys.Mapbox.length&&"mapbox"===b.provider&&(b.provider="osrm"),"osrm"===b.provider&&(b.transitMode="car"),a("./L.Routing.Extensions.MapzenFormatter"),"mapzen"===b.provider&&(b.formatter=L.Routing.Extensions.mapzenFormatter()),"osrm"===b.provider&&0<b.providerKeys.Mapbox.length?b.provider="mapbox":"osrm"===b.provider&&0<b.providerKeys.Mapzen.length?b.provider="mapzen":"osrm"===b.provider&&0<b.providerKeys.GraphHopper.length&&(b.provider="graphhopper");var c={};c.alternatives=!b.routingOptions||!b.routingOptions.alternatives||b.routingOptions.alternatives,c.steps=!b.routingOptions||!b.routingOptions.steps||b.routingOptions.steps;var d=!b.useHints||b.useHints,e={provider:b.provider,transitMode:b.transitMode,providerKeys:b.providerKeys,serviceUrl:b.serviceUrl||"https://router.project-osrm.org/route/v1",timeout:b.timeout||3e4,routingOptions:c,polylinePrecision:b.polylinePrecision||5,useHints:d,suppressDemoServerWarning:!1,language:b.language},f=a("./L.Routing.Extensions.Router");b.router=f(e),L.Util.setOptions(this,b),L.Routing.Control.prototype.initialize.call(this,b)},_createRadioButton:function(a,b,c,d,e){var f=L.DomUtil.create("input","lrm-extensions-Button",a);f.type="radio",f.setAttribute("title",b),f.setAttribute("name",c),f.id=d;var g=L.DomUtil.create("label","lrm-extensions-Label",a);return g.setAttribute("title",b),g.setAttribute("for",d),g.id=e,f},_routingButtonsDiv:L.DomUtil.create("form","lrm-extensions-RoutingButtons"),_servicesButtonsDiv:L.DomUtil.create("form","lrm-extensions-ServiceButtons"),onAdd:function(c){var d,e,f,g=L.Routing.Control.prototype.onAdd.call(this,c);if(0<this.options.providerKeys.GraphHopper.length||0<this.options.providerKeys.Mapzen.length||0<this.options.providerKeys.Mapbox.length){switch(d=this._createRadioButton(this._routingButtonsDiv,"Bike","transitmode","lrm-extensions-BikeButton","lrm-extensions-BikeLabel"),e=this._createRadioButton(this._routingButtonsDiv,"Pedestrian","transitmode","lrm-extensions-PedestrianButton","lrm-extensions-PedestrianLabel"),f=this._createRadioButton(this._routingButtonsDiv,"Car","transitmode","lrm-extensions-CarButton","lrm-extensions-CarLabel"),this.options.transitMode){case"bike":d.checked=!0;break;case"pedestrian":e.checked=!0;break;case"car":f.checked=!0;break;default:f.checked=!0}L.DomEvent.on(d,"click",L.bind(function(a){this.options.transitMode="bike",this.options.router.options.transitMode="bike",this.route(),this.fire("transitmodechanged")},this)),L.DomEvent.on(e,"click",L.bind(function(a){this.options.transitMode="pedestrian",this.options.router.options.transitMode="pedestrian",this.route(),this.fire("transitmodechanged")},this)),L.DomEvent.on(f,"click",L.bind(function(a){this.options.transitMode="car",this.options.router.options.transitMode="car",this.route(),this.fire("transitmodechanged")},this))}var h,i,j;switch(0<this.options.providerKeys.GraphHopper.length&&(h=this._createRadioButton(this._routingButtonsDiv,"GraphHopper","provider","lrm-extensions-GraphHopperButton","lrm-extensions-GraphHopperLabel"),L.DomEvent.on(h,"click",L.bind(function(a){this.options.provider="graphhopper",this.options.router.options.provider="graphhopper",this._formatter=new L.Routing.Formatter,this.route(),this.fire("providerchanged")},this))),0<this.options.providerKeys.Mapzen.length&&(i=this._createRadioButton(this._routingButtonsDiv,"Mapzen","provider","lrm-extensions-MapzenButton","lrm-extensions-MapzenLabel"),L.DomEvent.on(i,"click",L.bind(function(b){this.options.provider="mapzen",this.options.router.options.provider="mapzen",a("./L.Routing.Extensions.MapzenFormatter"),this._formatter=L.Routing.Extensions.mapzenFormatter(),this.route(),this.fire("providerchanged")},this))),0<this.options.providerKeys.Mapbox.length&&(j=this._createRadioButton(this._routingButtonsDiv,"Mapbox","provider","lrm-extensions-MapboxButton","lrm-extensions-MapboxLabel"),L.DomEvent.on(j,"click",L.bind(function(a){this.options.provider="mapbox",this.options.router.options.provider="mapbox",this._formatter=new L.Routing.Formatter,this.route(),this.fire("providerchanged")},this))),this.options.provider){case"graphhopper":h&&(h.checked=!0);break;case"mapzen":i&&(i.checked=!0);break;case"mapbox":j&&(j.checked=!0)}var k=L.DomUtil.create("a","lrm-extensions-ServicesAnchor",this._servicesButtonsDiv);k.id="downloadGpx",k.setAttribute("download","lrm-extensions.gpx"),k.innerHTML='<span id="lrm-extensions-GpxButton" class="lrm-extensions-ServicesButton"></span>';var l=L.DomUtil.create("span","lrm-extensions-ServicesButton",this._servicesButtonsDiv);return l.id="lrm-extensions-RouteToLineButton",L.DomEvent.on(l,"click",L.bind(function(c){var d={color:"#ff0000",width:5,clear:!1,name:""};this._gpxRoute&&this._gpxRoute.name&&0<this._gpxRoute.name.length?d.name=this._gpxRoute.name:d.name="",d="undefined"!=typeof b&&b.exports?a("./L.Routing.Extensions.Dialogs")(d,this._map,this):polylineDialog(d,this._map,this)},this)),g.insertBefore(this._routingButtonsDiv,g.firstChild),g.insertBefore(this._servicesButtonsDiv,g.firstChild),this._routePolylines.addTo(c),g},RouteToLine:function(c){if(this._gpxRoute&&this._gpxRoute.coordinates&&0<this._gpxRoute.coordinates.length){var d=L.polyline(this._gpxRoute.coordinates,{color:c.color,weight:c.width});0<c.name.length?d.bindTooltip(c.name):d.unbindTooltip(),d.LrmExtensionsName=c.name;var e;e="undefined"!=typeof b&&b.exports?a("./L.Routing.Extensions.PolylineMenu"):polylineMenu,L.DomEvent.on(d,"click",L.bind(function(a){e(a,this._map,this)},this)),L.DomEvent.on(d,"contextmenu",L.bind(function(a){e(a,this._map,this)},this)),this._routePolylines.addLayer(d),c.clear&&this.setWaypoints([])}},addPolyline:function(c,d,e){var f=L.polyline(c,d);0<e.length&&f.bindTooltip(e),f.LrmExtensionsName=e;var g;g="undefined"!=typeof b&&b.exports?a("./L.Routing.Extensions.PolylineMenu"):polylineMenu,L.DomEvent.on(f,"click",L.bind(function(a){g(a,this._map,this)},this)),L.DomEvent.on(f,"contextmenu",L.bind(function(a){g(a,this._map,this)},this)),this._routePolylines.addLayer(f)},getRoutePolylines:function(){return this._routePolylines},show:function(){L.Routing.Control.prototype.show.call(this),this._routingButtonsDiv.setAttribute("style","display: block"),this._servicesButtonsDiv.setAttribute("style","display: block")},hide:function(){L.Routing.Control.prototype.hide.call(this),this._routingButtonsDiv.setAttribute("style","display: none"),this._servicesButtonsDiv.setAttribute("style","display: none")},_updateLines:function(a){L.Routing.Control.prototype._updateLines.call(this,a),this._gpxRoute=a.route,this._prepareGpxLink(),this.fire("gpxchanged")},_prepareGpxLink:function(){var a=null;try{var b=new File([this.getGpxString()],{type:"application/xml"});null!==a&&window.URL.revokeObjectURL(a),a=window.URL.createObjectURL(b)}catch(a){}a?document.getElementById("downloadGpx").href=a:document.getElementById("downloadGpx").style.visibility="hidden"},_toXmlString:function(a){return a.replace("&","&amp;").replace("'","&apos;").replace('"',"&quote;").replace(">","&gt;").replace("<","&lt;")},getGpxString:function(a){void 0===a&&(a=a||{}),void 0===a.GpxXmlDeclaration&&(a.GpxXmlDeclaration=!0),void 0===a.GpxDate&&(a.GpxDate=2),void 0===a.GpxWaypoints&&(a.GpxWaypoints=!0),void 0===a.gpxRoute&&(a.gpxRoute=!0),void 0===a.GpxTrack&&(a.GpxTrack=!0);var b,c="\n",d="\n\t",e="\n\t\t",f="\n\t\t\t";switch(a.GpxDate){case 0:b="";break;case 1:b="time='1970-01-01T00:00:00.000Z' ";break;default:b="time='"+(new Date).toISOString()+"' "}var g="";if(a.GpxXmlDeclaration&&(g="<?xml version='1.0'?>"+c),g+="<gpx xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xsi:schemaLocation='http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd' version='1.1' creator='Leaflet-Routing-Gpx'>",this._gpxRoute){var h=0;if(this._gpxRoute.waypoints&&a.GpxWaypoints)for(h=0;h<this._gpxRoute.waypoints.length;h++)g+=d+"<wpt lat='"+this._gpxRoute.waypoints[h].latLng.lat+"' lon='"+this._gpxRoute.waypoints[h].latLng.lng+"' "+b+"name='"+h+"' />";if(this._gpxRoute.coordinates&&0<this._gpxRoute.coordinates.length){if(a.gpxRoute){if(g+=d+"<rte>",this._gpxRoute.instructions&&0<this._gpxRoute.instructions.length)for(h=0;h<this._gpxRoute.instructions.length;h++)g+=e+"<rtept lat='"+(this._gpxRoute.coordinates[this._gpxRoute.instructions[h].index].lat?this._gpxRoute.coordinates[this._gpxRoute.instructions[h].index].lat:this._gpxRoute.coordinates[this._gpxRoute.instructions[h].index][0])+"' lon='"+(this._gpxRoute.coordinates[this._gpxRoute.instructions[h].index].lng?this._gpxRoute.coordinates[this._gpxRoute.instructions[h].index].lng:this._gpxRoute.coordinates[this._gpxRoute.instructions[h].index][1])+"' "+b+"name='"+h+"' desc='"+this._toXmlString(this._formatter.formatInstruction(this._gpxRoute.instructions[h]))+"' />";g+=d+"</rte>"}if(a.GpxTrack){for(g+=d+"<trk>",g+=e+"<trkseg>",h=0;h<this._gpxRoute.coordinates.length;h++)g+=f+"<trkpt lat='"+(this._gpxRoute.coordinates[h].lat?this._gpxRoute.coordinates[h].lat:this._gpxRoute.coordinates[h][0])+"' lon='"+(this._gpxRoute.coordinates[h].lng?this._gpxRoute.coordinates[h].lng:this._gpxRoute.coordinates[h][1])+"' "+b+"name='"+h+"' />";g+=e+"</trkseg>",g+=d+"</trk>"}}}return g+=c+"</gpx>"},getRouteHTMLElement:function(a){a=a||{},a.RouteElement=a.RouteElement||"div",a.RouteHeader=a.RouteHeader||"<h1>Itinéraire:</h1>",a.RouteElementId=a.RouteElementId||"Route",a.RouteSummaryTemplate=a.RouteSummaryTemplate||'<div class="Route-Summary">Distance&nbsp;:&nbsp;{ Distance }&nbsp;-&nbsp;Temps&nbsp;:&nbsp;{ Time }</div>',a.CumDistanceTemplate=a.CumDistanceTemplate||'<div class="Route-CumDistance"> Distance cumulée&nbsp;:&nbsp;environ&nbsp;{ CumDistance }<div>',a.RouteTextInstructionTemplate=a.RouteTextInstructionTemplate||'<div class="Route-TextInstruction">{TextInstruction}</div>',a.RouteNextDistanceTemplate=a.RouteNextDistanceTemplate||'<div class="Route-NextDistanceInstruction">Ensuite, continuez pendant environ {NextDistance}</div>',a.RoutePreInstructionTemplate=a.RoutePreInstructionTemplate||'<div class="Route-PreInstruction">{PreInstruction}</div>',a.RoutePostInstructionTemplate=a.RoutePostInstructionTemplate||'<div class="Route-PostInstruction">{PostInstruction}</div>';var b=document.createElement(a.RouteElement);if(b.id=a.RouteElementId,b.innerHTML=a.RouteHeader,this._gpxRoute&&this._gpxRoute.instructions&&0<this._gpxRoute.instructions.length){var c=document.createElement("div");b.appendChild(c),c.outerHTML=L.Util.template(a.RouteSummaryTemplate,{Distance:this._formatter.formatDistance(this._gpxRoute.summary.totalDistance),Time:this._formatter.formatTime(this._gpxRoute.summary.totalTime)});var d=0,e=0;for(d=0;d<this._gpxRoute.instructions.length;d++){switch(this.options.provider){case"graphhopper":if(this._gpxRoute.instructions[d].text){var f=document.createElement("div");if(b.appendChild(f),f.outerHTML=L.Util.template(a.RouteTextInstructionTemplate,{TextInstruction:""+(d+1)+" - "+this._toXmlString(this._gpxRoute.instructions[d].text)}),0<this._gpxRoute.instructions[d].distance){var g=document.createElement("div");b.appendChild(g),g.outerHTML=L.Util.template(a.RouteNextDistanceTemplate,{NextDistance:this._formatter.formatDistance(Math.round(1e3*this._gpxRoute.instructions[d].distance)/1e3)})}}break;case"mapzen":if(this._gpxRoute.instructions[d].verbal_pre_transition_instruction){var h=document.createElement("div");b.appendChild(h),h.outerHTML=L.Util.template(a.RoutePreInstructionTemplate,{PreInstruction:""+(d+1)+" - "+this._toXmlString(this._gpxRoute.instructions[d].verbal_pre_transition_instruction)})}if(this._gpxRoute.instructions[d].verbal_post_transition_instruction){var i=document.createElement("div");b.appendChild(i),i.outerHTML=L.Util.template(a.RoutePostInstructionTemplate,{PostInstruction:this._toXmlString(this._gpxRoute.instructions[d].verbal_post_transition_instruction)})}break;case"osrm":case"mapbox":var j=document.createElement("div");if(b.appendChild(j),j.outerHTML=L.Util.template(a.RouteTextInstructionTemplate,{TextInstruction:""+(d+1)+" - "+this._formatter.formatInstruction(this._gpxRoute.instructions[d])}),0<this._gpxRoute.instructions[d].distance){var k=document.createElement("div");b.appendChild(k),k.outerHTML=L.Util.template(a.RouteNextDistanceTemplate,{NextDistance:this._formatter.formatDistance(Math.round(1e3*this._gpxRoute.instructions[d].distance)/1e3)})}}if(0<e){var l=document.createElement("div");b.appendChild(l),l.outerHTML=L.Util.template(a.CumDistanceTemplate,{CumDistance:this._formatter.formatDistance(Math.round(1e3*e)/1e3)})}e+=this._gpxRoute.instructions[d].distance}}return b}}),L.Routing.extensions=function(a){return new L.Routing.Extensions(a)},"undefined"!=typeof b&&b.exports&&(b.exports=L.Routing.extensions)}()},{"./L.Routing.Extensions.Dialogs":10,"./L.Routing.Extensions.MapzenFormatter":13,"./L.Routing.Extensions.PolylineMenu":15,"./L.Routing.Extensions.Router":16}]},{},[17]);